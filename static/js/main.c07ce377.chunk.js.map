{"version":3,"sources":["D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/assets/images/icon-blog.png","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/components/Header.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/components/Footer.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/pages/home.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/assets/images/imperativa.jpg","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/assets/images/declarativa.jpg","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/assets/images/funcional.jpg","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/assets/images/objetos.jpg","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/pages/Paradigmas.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/pages/Referencias.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/pages/Lenguajes.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/App.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/reportWebVitals.js","D:/Ingenieria de Software IBERO/SEMESTRE 1/Metodos de Construccion de Software/Unidad 1 Fundamentos de la construcción de software/Actividad 2/blog/src/index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","Brand","href","src","logo","width","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","to","Footer","home","Container","Row","data","map","values","Col","md","sm","style","marginBottom","Card","height","Img","variant","urlImagen","Body","Title","name","Text","description","idCard","Paradigmas","Imperativa","Declarativa","Funcional","Objetos","Referencias","ListGroup","Item","referencia","idReferencia","Lenguajes","sizeColImg","nombre","sizeColText","descripcion","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c07ce377.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-blog.c0d73f0c.png\";","import React from \"react\";\r\nimport logo from \"../assets/images/icon-blog.png\";\r\nimport \"../assets/css/header.css\";\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            src={logo}\r\n            width=\"100\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse className=\"justify-content-end\" id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n            <Nav.Link><Link to=\"/paradigmas\">Paradigmas</Link></Nav.Link>\r\n            <Nav.Link><Link to=\"/lenguajes\">Lenguajes</Link></Nav.Link>\r\n            <Nav.Link><Link to=\"/referencias\">Referencias</Link></Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../assets/css/footer.css'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container container_footer\">\r\n                <div>\r\n                    Universidad Iberoamericana 2021.\r\n                </div>\r\n                <div>\r\n                    Cristian Alberto Henao\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"../assets/css/home.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport data from '../assets/json/home.json';\r\n\r\nfunction home() { \r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <p></p>\r\n        <article className=\"article_principal\">\r\n          Este blog está orientado a conocer según la opinión del autor y con\r\n          base en la investigación realizada los paradigmas de programación que\r\n          a diario utilizamos y como estos son una de las bases para poder hacer\r\n          que nuestro proyecto tenga una calidad óptima según se requiera.<br /><br />\r\n          También vamos a ver y conocer algunos lenguajes de programación según\r\n          su tipo y como estos aplican algunos de los paradigmas más utilizados.\r\n          Teniendo como premisa y pilar del blog la calidad y como llegamos a\r\n          ella mediante la utilización correcta y acertada de estos paradigmas y\r\n          otros aspectos como el diseño y la arquitectura de software para\r\n          llegar a un buen software. Porque como dicen por ahí: “No es lo mismo\r\n          software, que un buen software”.\r\n        </article>\r\n      </div>\r\n      <Container className=\"container_cards\">\r\n        <Row>\r\n          {data.map((values) => (\r\n              <Col md={4} sm={12} style={{marginBottom: '25px'}} >\r\n              <Card key={values.idCard} style={{ height: '100%' }} >\r\n                <Card.Img variant=\"top\" src={values.urlImagen} className=\"img-card-home\" />\r\n                <Card.Body>\r\n                  <Card.Title>{values.name}</Card.Title>\r\n                  <Card.Text>\r\n                    {values.description}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","export default __webpack_public_path__ + \"static/media/imperativa.c12e1cc0.jpg\";","export default __webpack_public_path__ + \"static/media/declarativa.426bd6d6.jpg\";","export default __webpack_public_path__ + \"static/media/funcional.79b003ed.jpg\";","export default __webpack_public_path__ + \"static/media/objetos.e03b8167.jpg\";","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport \"../assets/css/paradigmas.css\";\r\nimport Imperativa from \"../assets/images/imperativa.jpg\";\r\nimport Declarativa from \"../assets/images/declarativa.jpg\";\r\nimport Funcional from \"../assets/images/funcional.jpg\";\r\nimport Objetos from \"../assets/images/objetos.jpg\";\r\n\r\nexport default function Paradigmas() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h1>Paradigmas de Programación</h1>\r\n        <article className=\"article_principal\">\r\n          Un paradigma de programación es un estilo de desarrollo de programas.\r\n          Es decir, un modelo para resolver problemas computacionales. Los\r\n          lenguajes de programación, necesariamente, se encuadran en uno o\r\n          varios paradigmas a la vez a partir del tipo de órdenes que permiten\r\n          implementar, algo que tiene una relación directa con su sintaxis.\r\n        </article>\r\n        <div className=\"container_paradigmas\">\r\n          <div className=\"first_content\">\r\n            <img\r\n              src={Imperativa}\r\n              width=\"235\"\r\n              alt=\"Imagen ilustrativa de la programación Imperativa\"\r\n            />\r\n          </div>\r\n          <div className=\"second_content\">\r\n            <div className=\"container-info\">\r\n              <h5>Programación Imperativa</h5>\r\n              La programación imperativa (del latín imperare = ordenar) es el\r\n              paradigma de programación más antiguo. De acuerdo con este\r\n              paradigma, un programa consiste en una secuencia claramente\r\n              definida de instrucciones para un ordenador.\r\n              <br /> El código fuente de los lenguajes imperativos encadena\r\n              instrucciones una detrás de otra que determinan lo que debe hacer\r\n              el ordenador en cada momento para alcanzar un resultado deseado.\r\n              Los valores utilizados en las variables se modifican durante la\r\n              ejecución del programa. Para gestionar las instrucciones, se\r\n              integran estructuras de control como bucles o estructuras anidadas\r\n              en el código.\r\n            </div>\r\n          </div>\r\n          <div className=\"third_content\">\r\n            <div className=\"container-info\">\r\n              <h5>Programación Declarativa</h5>\r\n              No hay consenso sobre la definición de este paradigma, pero todas\r\n              las explicaciones coinciden en algo: lo que destaca de los\r\n              lenguajes de programación declarativa es que siempre se describe\r\n              el resultado final deseado, en lugar de mostrar todos los pasos de\r\n              trabajo. Para alcanzar el objetivo, en la programación declarativa\r\n              se determina automáticamente la vía de solución. Esto funciona\r\n              siempre y cuando las especificaciones del estado final se definan\r\n              claramente y exista un procedimiento de ejecución adecuado. Si se\r\n              dan las dos condiciones, la programación declarativa es muy\r\n              eficiente.\r\n            </div>\r\n          </div>\r\n          <div className=\"fourth_content\">\r\n            <img\r\n              src={Declarativa}\r\n              width=\"235\"\r\n              alt=\"Imagen ilustrativa de la programación Declarativa\"\r\n            />\r\n          </div>\r\n          <div className=\"first_content\">\r\n            <img\r\n              src={Funcional}\r\n              width=\"235\"\r\n              alt=\"Imagen ilustrativa de la programación Declarativa\"\r\n            />\r\n          </div>\r\n          <div className=\"second_content\">\r\n            <div className=\"container-info\">\r\n              <h5>Programación Funcional</h5>\r\n              El nombre ya lo sugiere: la programación funcional o functional\r\n              programming se centra en las funciones. En un programa funcional,\r\n              todos los elementos pueden entenderse como funciones y el código\r\n              puede ejecutarse mediante llamadas de función secuenciales. Por el\r\n              contrario, no se asignan valores de forma independiente. Una\r\n              función se imagina mejor como una variante especial de un\r\n              subprograma. Esta es reutilizable y, a diferencia de un\r\n              procedimiento, devuelve directamente un resultado.\r\n            </div>\r\n          </div>\r\n          <div className=\"third_content\">\r\n            <div className=\"container-info\">\r\n              <h5>Programación Orientada a Objetos</h5>\r\n              Con el paradigma de Programación Orientado a Objetos lo que\r\n              buscamos es dejar de centrarnos en la lógica pura de los\r\n              programas, para empezar a pensar en objetos, lo que constituye la\r\n              base de este paradigma. Esto nos ayuda muchísimo en sistemas\r\n              grandes, ya que en vez de pensar en funciones, pensamos en las\r\n              relaciones o interacciones de los diferentes componentes del\r\n              sistema.\r\n              <br /> Un programador diseña un programa de software organizando\r\n              piezas de información y comportamientos relacionados en una\r\n              plantilla llamada clase. Luego, se crean objetos individuales a\r\n              partir de la plantilla de clase. Todo el programa de software se\r\n              ejecuta haciendo que varios objetos interactúen entre sí para\r\n              crear un programa más grande.\r\n            </div>\r\n          </div>\r\n          <div className=\"fourth_content\">\r\n            <img\r\n              src={Objetos}\r\n              width=\"235\"\r\n              alt=\"Imagen ilustrativa de la programación Declarativa\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport data from '../assets/json/referencias.json';\r\nimport {ListGroup} from 'react-bootstrap';\r\n\r\nfunction Referencias() {\r\n    return (\r\n        <>\r\n          <Header />\r\n          <div className=\"container\"> \r\n              <h1>Referencias Bibliograficas y Webgraficas.</h1>\r\n              <ListGroup variant=\"flush\">\r\n                {data.map((values) => (\r\n                    <ListGroup.Item key={values.idReferencia} >{values.referencia}</ListGroup.Item>    \r\n                ))}\r\n              </ListGroup>\r\n        </div> \r\n        <Footer /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Referencias\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport Header from \"../components/Header\";\r\nimport data from \"../assets/json/lenguajes.json\";\r\nimport \"../assets/css/lenguajes.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Lenguajes() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h1>Lenguajes de Programación</h1>\r\n        <article className=\"article_principal\">\r\n          Los lenguajes de programación son un mundo maravilloso para todo aquel\r\n          que ame el desarrollo de software. Desde que empezamos en este camino\r\n          de codificar hasta que dejamos de lado el código para tal vez dirigir\r\n          una empresa siempre vamos a saber que cada uno de los lenguajes que\r\n          aprendemos es un mundo totalmente diferente que nos brinda la facultad\r\n          de poder realizar un sinfín de proyectos. Pienso, basado en la\r\n          anterior premisa que cada lenguaje está ahí para ser utilizado de\r\n          acuerdo con cada necesidad y que ningún lenguaje es mejor que otro,\r\n          pero lo que es cierto es que unos lenguajes simplifican más la vida\r\n          que otros.\r\n        </article>\r\n        <div className=\"container-lenguajes\">\r\n          {data.map((values) => (\r\n            <Row>\r\n              <Col md={values.sizeColImg} sm={12} className=\"content-img\">\r\n                <img\r\n                  src={values.urlImagen}\r\n                  style={{ width: \"235px\" }}\r\n                  alt={values.nombre}\r\n                />\r\n              </Col>\r\n              <Col md={values.sizeColText} sm={12} className=\"content-description\">\r\n                <div className=\"container-info\">\r\n                  <h5>{values.nombre}</h5>\r\n                  {values.descripcion}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/home';\nimport Paradigmas from './pages/Paradigmas';\nimport Referencias from './pages/Referencias';\nimport Lenguajes from './pages/Lenguajes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Switch>\n          <Route path='/' exact>\n            <Home />\n          </Route>\n          <Route path='/paradigmas' exact>\n            <Paradigmas />\n          </Route>\n          <Route path=\"/lenguajes\" exact>  \n            <Lenguajes />\n          </Route>\n          <Route path=\"/referencias\" exact>  \n            <Referencias />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}